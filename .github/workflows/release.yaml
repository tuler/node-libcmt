name: Release
on:
    push:
        branches:
            - feature/rollups
concurrency: ${{ github.workflow }}-${{ github.ref }}
permissions:
    actions: write
    contents: write
    deployments: write
    id-token: write
    packages: write
    pull-requests: write
jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-22.04, macos-12, macos-14]
                node: [20]
        steps:
            - name: Checkout machine-emulator-tools
              uses: actions/checkout@v4
              with:
                  repository: cartesi/machine-emulator-tools
                  path: machine-emulator-tools

            - name: Build libcmt-mock
              run: make install-mock PREFIX=$PWD/_install
              working-directory: machine-emulator-tools/sys-utils/libcmt

            - name: Checkout
              uses: actions/checkout@v4
              with:
                  path: node-libcmt

            - uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - uses: pnpm/action-setup@v3
              with:
                  package_json_file: node-libcmt/package.json

            - name: Setup Node.js ${{ matrix.node }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node }}
                  cache-dependency-path: node-libcmt/pnpm-lock.yaml
                  cache: "pnpm"

            - name: Install Dependencies
              run: pnpm install
              working-directory: node-libcmt

            - name: Package
              run: pnpm run package
              working-directory: node-libcmt

            - name: Upload binary
              uses: actions/upload-artifact@v4
              with:
                  name: binary-${{ matrix.os }}-${{ matrix.node}}
                  path: node-libcmt/build/stage/**

    release:
        name: Release
        runs-on: ubuntu-latest
        needs: [build]
        steps:
            - name: Checkout machine-emulator-tools
              uses: actions/checkout@v4
              with:
                  repository: cartesi/machine-emulator-tools
                  path: machine-emulator-tools

            - name: Build libcmt-mock
              run: make install-mock PREFIX=$PWD/_install
              working-directory: machine-emulator-tools/sys-utils/libcmt

            - name: Checkout
              uses: actions/checkout@v4
              with:
                  path: node-libcmt

            - uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - uses: pnpm/action-setup@v3
              with:
                  package_json_file: node-libcmt/package.json

            - name: Setup Node.js 20
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "pnpm"
                  cache-dependency-path: node-libcmt/pnpm-lock.yaml
                  registry-url: "https://registry.npmjs.org"

            - name: Create Release Pull Request
              id: changesets
              uses: changesets/action@v1
              with:
                  cwd: node-libcmt
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Get package version
              id: version
              uses: martinbeentjes/npm-get-version-action@v1.3.1
              with:
                  path: node-libcmt

            - name: Download binaries
              uses: actions/download-artifact@v4
              if: steps.changesets.outputs.hasChangesets == 'false'
              with:
                  pattern: binary-*
                  path: node-libcmt/build/stage/${{ steps.version.outputs.current-version }}
                  merge-multiple: true

            - name: Install Dependencies
              run: pnpm install
              working-directory: node-libcmt

            - name: Publish package
              if: steps.changesets.outputs.hasChangesets == 'false'
              run: pnpm run release
              working-directory: node-libcmt
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - run: ls node-libcmt/build/stage/${{ steps.version.outputs.current-version }}

            - name: Publish binaries
              uses: softprops/action-gh-release@v2
              if: steps.changesets.outputs.hasChangesets == 'false'
              with:
                  files: node-libcmt/build/stage/${{ steps.version.outputs.current-version }}/**
                  tag_name: ${{ steps.version.outputs.current-version }}
